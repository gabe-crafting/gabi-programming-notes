[{"data":1,"prerenderedAt":1941},["ShallowReactive",2],{"navigation":3,"/web/typescript-cheat-sheet":78,"/web/typescript-cheat-sheet-surround":1937},[4,23,48],{"title":5,"path":6,"stem":7,"children":8,"icon":22},"Getting Started","/getting-started","1.getting-started/1.index",[9,12,17],{"title":10,"path":6,"stem":7,"icon":11},"Introduction","i-lucide-house",{"title":13,"path":14,"stem":15,"icon":16},"Installation","/getting-started/installation","1.getting-started/2.installation","i-lucide-download",{"title":18,"path":19,"stem":20,"icon":21},"Usage","/getting-started/usage","1.getting-started/3.usage","i-lucide-sliders",false,{"title":24,"path":25,"stem":26,"children":27,"page":22},"Essentials","/essentials","2.essentials",[28,33,38,43],{"title":29,"path":30,"stem":31,"icon":32},"Markdown Syntax","/essentials/markdown-syntax","2.essentials/1.markdown-syntax","i-lucide-heading-1",{"title":34,"path":35,"stem":36,"icon":37},"Code Blocks","/essentials/code-blocks","2.essentials/2.code-blocks","i-lucide-code-xml",{"title":39,"path":40,"stem":41,"icon":42},"Prose Components","/essentials/prose-components","2.essentials/3.prose-components","i-lucide-component",{"title":44,"path":45,"stem":46,"icon":47},"Images and Embeds","/essentials/images-embeds","2.essentials/4.images-embeds","i-lucide-image",{"title":49,"path":50,"stem":51,"children":52,"page":22},"Web","/web","web",[53,57,61,65,69,73],{"title":54,"path":55,"stem":56},"Tools","/web/utilities","web/1.utilities",{"title":58,"path":59,"stem":60},"Cheatsheet","/web/cheatsheet","web/cheatsheet",{"title":62,"path":63,"stem":64},"React cheatsheet","/web/react","web/react",{"title":66,"path":67,"stem":68},"React Notes page","/web/react-notes","web/react-notes",{"title":70,"path":71,"stem":72},"SOLID for javascript, typescript, component frameworks","/web/solid-for-web","web/solid-for-web",{"title":74,"path":75,"stem":76,"icon":77},"Typescript","/web/typescript-cheat-sheet","web/typescript-cheat-sheet","i-nonicons-typescript-16",{"id":79,"title":74,"body":80,"description":107,"extension":1931,"links":1932,"meta":1933,"navigation":1934,"path":75,"seo":1935,"stem":76,"__hash__":1936},"docs/web/typescript-cheat-sheet.md",{"type":81,"value":82,"toc":1926},"minimark",[83,88,877,881,885,898,1470,1474,1476,1484,1922],[84,85,87],"h2",{"id":86},"fundamentals","Fundamentals",[89,90,93,348,549,736],"card-group",{"className":91},[92],"w-full",[94,95,96,101],"card",{},[97,98,100],"h3",{"id":99},"basic-primitive-types","Basic primitive types",[102,103,108],"pre",{"className":104,"code":105,"language":106,"meta":107,"style":107},"language-ts shiki shiki-themes material-theme-lighter material-theme material-theme-palenight","let str: string = \"hello\"\nlet num: number = 42\nlet bool: boolean = true\nlet n: null = null\nlet u: undefined = undefined\nlet v: void = undefined // used for functions with no return\nlet a: any = \"anything\" // disables type checking (avoid)\nlet unk: unknown = 123 // safer alternative to any\nlet nev: never = (() => { throw new Error(\"no return\") })() // function never returns\n","ts","",[109,110,111,145,164,183,201,219,240,266,287],"code",{"__ignoreMap":107},[112,113,116,120,124,128,132,135,138,142],"span",{"class":114,"line":115},"line",1,[112,117,119],{"class":118},"spNyl","let",[112,121,123],{"class":122},"sTEyZ"," str",[112,125,127],{"class":126},"sMK4o",":",[112,129,131],{"class":130},"sBMFI"," string",[112,133,134],{"class":126}," =",[112,136,137],{"class":126}," \"",[112,139,141],{"class":140},"sfazB","hello",[112,143,144],{"class":126},"\"\n",[112,146,148,150,153,155,158,160],{"class":114,"line":147},2,[112,149,119],{"class":118},[112,151,152],{"class":122}," num",[112,154,127],{"class":126},[112,156,157],{"class":130}," number",[112,159,134],{"class":126},[112,161,163],{"class":162},"sbssI"," 42\n",[112,165,167,169,172,174,177,179],{"class":114,"line":166},3,[112,168,119],{"class":118},[112,170,171],{"class":122}," bool",[112,173,127],{"class":126},[112,175,176],{"class":130}," boolean",[112,178,134],{"class":126},[112,180,182],{"class":181},"sfNiH"," true\n",[112,184,186,188,191,193,196,198],{"class":114,"line":185},4,[112,187,119],{"class":118},[112,189,190],{"class":122}," n",[112,192,127],{"class":126},[112,194,195],{"class":130}," null",[112,197,134],{"class":126},[112,199,200],{"class":126}," null\n",[112,202,204,206,209,211,214,216],{"class":114,"line":203},5,[112,205,119],{"class":118},[112,207,208],{"class":122}," u",[112,210,127],{"class":126},[112,212,213],{"class":130}," undefined",[112,215,134],{"class":126},[112,217,218],{"class":126}," undefined\n",[112,220,222,224,227,229,232,234,236],{"class":114,"line":221},6,[112,223,119],{"class":118},[112,225,226],{"class":122}," v",[112,228,127],{"class":126},[112,230,231],{"class":130}," void",[112,233,134],{"class":126},[112,235,213],{"class":126},[112,237,239],{"class":238},"sHwdD"," // used for functions with no return\n",[112,241,243,245,248,250,253,255,257,260,263],{"class":114,"line":242},7,[112,244,119],{"class":118},[112,246,247],{"class":122}," a",[112,249,127],{"class":126},[112,251,252],{"class":130}," any",[112,254,134],{"class":126},[112,256,137],{"class":126},[112,258,259],{"class":140},"anything",[112,261,262],{"class":126},"\"",[112,264,265],{"class":238}," // disables type checking (avoid)\n",[112,267,269,271,274,276,279,281,284],{"class":114,"line":268},8,[112,270,119],{"class":118},[112,272,273],{"class":122}," unk",[112,275,127],{"class":126},[112,277,278],{"class":130}," unknown",[112,280,134],{"class":126},[112,282,283],{"class":162}," 123",[112,285,286],{"class":238}," // safer alternative to any\n",[112,288,290,292,295,297,300,302,305,308,311,314,318,321,325,329,331,334,336,339,342,345],{"class":114,"line":289},9,[112,291,119],{"class":118},[112,293,294],{"class":122}," nev",[112,296,127],{"class":126},[112,298,299],{"class":130}," never",[112,301,134],{"class":126},[112,303,304],{"class":122}," (",[112,306,307],{"class":126},"()",[112,309,310],{"class":118}," =>",[112,312,313],{"class":126}," {",[112,315,317],{"class":316},"s7zQu"," throw",[112,319,320],{"class":126}," new",[112,322,324],{"class":323},"s2Zo4"," Error",[112,326,328],{"class":327},"swJcz","(",[112,330,262],{"class":126},[112,332,333],{"class":140},"no return",[112,335,262],{"class":126},[112,337,338],{"class":327},") ",[112,340,341],{"class":126},"}",[112,343,344],{"class":122},")() ",[112,346,347],{"class":238},"// function never returns\n",[94,349,350,354,440,444],{},[97,351,353],{"id":352},"type-inference-and-assertions","Type inference and assertions",[102,355,357],{"className":104,"code":356,"language":106,"meta":107,"style":107},"let x = 5                 // inferred as number\nlet y = x as number       // assertion (force treat as number)\nlet z = \u003Cstring>\"text\"    // JSX-incompatible assertion syntax\nlet safe = maybeValue!    // non-null assertion (trust it's not null)\n",[109,358,359,375,394,422],{"__ignoreMap":107},[112,360,361,363,366,369,372],{"class":114,"line":115},[112,362,119],{"class":118},[112,364,365],{"class":122}," x ",[112,367,368],{"class":126},"=",[112,370,371],{"class":162}," 5",[112,373,374],{"class":238},"                 // inferred as number\n",[112,376,377,379,382,384,386,389,391],{"class":114,"line":147},[112,378,119],{"class":118},[112,380,381],{"class":122}," y ",[112,383,368],{"class":126},[112,385,365],{"class":122},[112,387,388],{"class":316},"as",[112,390,157],{"class":130},[112,392,393],{"class":238},"       // assertion (force treat as number)\n",[112,395,396,398,401,403,406,409,412,414,417,419],{"class":114,"line":166},[112,397,119],{"class":118},[112,399,400],{"class":122}," z ",[112,402,368],{"class":126},[112,404,405],{"class":122}," \u003C",[112,407,408],{"class":130},"string",[112,410,411],{"class":122},">",[112,413,262],{"class":126},[112,415,416],{"class":140},"text",[112,418,262],{"class":126},[112,420,421],{"class":238},"    // JSX-incompatible assertion syntax\n",[112,423,424,426,429,431,434,437],{"class":114,"line":185},[112,425,119],{"class":118},[112,427,428],{"class":122}," safe ",[112,430,368],{"class":126},[112,432,433],{"class":122}," maybeValue",[112,435,436],{"class":126},"!",[112,438,439],{"class":238},"    // non-null assertion (trust it's not null)\n",[97,441,443],{"id":442},"unions-intersections-literal-types","Unions & Intersections, literal types",[102,445,447],{"className":104,"code":446,"language":106,"meta":107,"style":107},"type Status = \"success\" | \"error\" | \"loading\" // literal union\ntype User = { name: string; age?: number }\ntype Employee = User & { id: number }         // intersection merges types\n",[109,448,449,488,520],{"__ignoreMap":107},[112,450,451,454,457,459,461,464,466,469,471,474,476,478,480,483,485],{"class":114,"line":115},[112,452,453],{"class":118},"type",[112,455,456],{"class":130}," Status",[112,458,134],{"class":126},[112,460,137],{"class":126},[112,462,463],{"class":140},"success",[112,465,262],{"class":126},[112,467,468],{"class":126}," |",[112,470,137],{"class":126},[112,472,473],{"class":140},"error",[112,475,262],{"class":126},[112,477,468],{"class":126},[112,479,137],{"class":126},[112,481,482],{"class":140},"loading",[112,484,262],{"class":126},[112,486,487],{"class":238}," // literal union\n",[112,489,490,492,495,497,499,502,504,506,509,512,515,517],{"class":114,"line":147},[112,491,453],{"class":118},[112,493,494],{"class":130}," User",[112,496,134],{"class":126},[112,498,313],{"class":126},[112,500,501],{"class":327}," name",[112,503,127],{"class":126},[112,505,131],{"class":130},[112,507,508],{"class":126},";",[112,510,511],{"class":327}," age",[112,513,514],{"class":126},"?:",[112,516,157],{"class":130},[112,518,519],{"class":126}," }\n",[112,521,522,524,527,529,531,534,536,539,541,543,546],{"class":114,"line":166},[112,523,453],{"class":118},[112,525,526],{"class":130}," Employee",[112,528,134],{"class":126},[112,530,494],{"class":130},[112,532,533],{"class":126}," &",[112,535,313],{"class":126},[112,537,538],{"class":327}," id",[112,540,127],{"class":126},[112,542,157],{"class":130},[112,544,545],{"class":126}," }",[112,547,548],{"class":238},"         // intersection merges types\n",[94,550,551,555],{},[97,552,554],{"id":553},"function-typing","Function typing",[102,556,558],{"className":104,"code":557,"language":106,"meta":107,"style":107},"function add(a: number, b: number): number {\n  return a + b\n}\n\nconst log = (msg: string): void => console.log(msg) // no return value\n\n// Function overloads for multiple input types\nfunction overload(a: string): string\nfunction overload(a: number): number\nfunction overload(a: any): any { return a }\n",[109,559,560,596,609,614,620,660,664,669,689,708],{"__ignoreMap":107},[112,561,562,565,568,570,574,576,578,581,584,586,588,591,593],{"class":114,"line":115},[112,563,564],{"class":118},"function",[112,566,567],{"class":323}," add",[112,569,328],{"class":126},[112,571,573],{"class":572},"sHdIc","a",[112,575,127],{"class":126},[112,577,157],{"class":130},[112,579,580],{"class":126},",",[112,582,583],{"class":572}," b",[112,585,127],{"class":126},[112,587,157],{"class":130},[112,589,590],{"class":126},"):",[112,592,157],{"class":130},[112,594,595],{"class":126}," {\n",[112,597,598,601,603,606],{"class":114,"line":147},[112,599,600],{"class":316},"  return",[112,602,247],{"class":122},[112,604,605],{"class":126}," +",[112,607,608],{"class":122}," b\n",[112,610,611],{"class":114,"line":166},[112,612,613],{"class":126},"}\n",[112,615,616],{"class":114,"line":185},[112,617,619],{"emptyLinePlaceholder":618},true,"\n",[112,621,622,625,628,630,632,635,637,639,641,643,645,648,651,654,657],{"class":114,"line":203},[112,623,624],{"class":118},"const",[112,626,627],{"class":122}," log ",[112,629,368],{"class":126},[112,631,304],{"class":126},[112,633,634],{"class":572},"msg",[112,636,127],{"class":126},[112,638,131],{"class":130},[112,640,590],{"class":126},[112,642,231],{"class":130},[112,644,310],{"class":118},[112,646,647],{"class":122}," console",[112,649,650],{"class":126},".",[112,652,653],{"class":323},"log",[112,655,656],{"class":122},"(msg) ",[112,658,659],{"class":238},"// no return value\n",[112,661,662],{"class":114,"line":221},[112,663,619],{"emptyLinePlaceholder":618},[112,665,666],{"class":114,"line":242},[112,667,668],{"class":238},"// Function overloads for multiple input types\n",[112,670,671,673,676,678,680,682,684,686],{"class":114,"line":268},[112,672,564],{"class":118},[112,674,675],{"class":323}," overload",[112,677,328],{"class":126},[112,679,573],{"class":572},[112,681,127],{"class":126},[112,683,131],{"class":130},[112,685,590],{"class":126},[112,687,688],{"class":130}," string\n",[112,690,691,693,695,697,699,701,703,705],{"class":114,"line":289},[112,692,564],{"class":118},[112,694,675],{"class":323},[112,696,328],{"class":126},[112,698,573],{"class":572},[112,700,127],{"class":126},[112,702,157],{"class":130},[112,704,590],{"class":126},[112,706,707],{"class":130}," number\n",[112,709,711,713,715,717,719,721,723,725,727,729,732,734],{"class":114,"line":710},10,[112,712,564],{"class":118},[112,714,675],{"class":323},[112,716,328],{"class":126},[112,718,573],{"class":572},[112,720,127],{"class":126},[112,722,252],{"class":130},[112,724,590],{"class":126},[112,726,252],{"class":130},[112,728,313],{"class":126},[112,730,731],{"class":316}," return",[112,733,247],{"class":122},[112,735,519],{"class":126},[94,737,738,742],{},[97,739,741],{"id":740},"enums","Enums",[102,743,745],{"className":104,"code":744,"language":106,"meta":107,"style":107},"  enum Direction { // numeric enum (auto-incremented)\n  Up, // 0\n  Down, // 1\n  Left = 10, // explicit value\n  Right // 11\n}\n\nenum Color { // string enum\n  Red = \"RED\",\n  Green = \"GREEN\",\n  Blue = \"BLUE\"\n}\n",[109,746,747,760,770,780,795,803,807,811,824,841,857,872],{"__ignoreMap":107},[112,748,749,752,755,757],{"class":114,"line":115},[112,750,751],{"class":118},"  enum",[112,753,754],{"class":130}," Direction",[112,756,313],{"class":126},[112,758,759],{"class":238}," // numeric enum (auto-incremented)\n",[112,761,762,765,767],{"class":114,"line":147},[112,763,764],{"class":122},"  Up",[112,766,580],{"class":126},[112,768,769],{"class":238}," // 0\n",[112,771,772,775,777],{"class":114,"line":166},[112,773,774],{"class":122},"  Down",[112,776,580],{"class":126},[112,778,779],{"class":238}," // 1\n",[112,781,782,785,787,790,792],{"class":114,"line":185},[112,783,784],{"class":122},"  Left ",[112,786,368],{"class":126},[112,788,789],{"class":162}," 10",[112,791,580],{"class":126},[112,793,794],{"class":238}," // explicit value\n",[112,796,797,800],{"class":114,"line":203},[112,798,799],{"class":122},"  Right ",[112,801,802],{"class":238},"// 11\n",[112,804,805],{"class":114,"line":221},[112,806,613],{"class":126},[112,808,809],{"class":114,"line":242},[112,810,619],{"emptyLinePlaceholder":618},[112,812,813,816,819,821],{"class":114,"line":268},[112,814,815],{"class":118},"enum",[112,817,818],{"class":130}," Color",[112,820,313],{"class":126},[112,822,823],{"class":238}," // string enum\n",[112,825,826,829,831,833,836,838],{"class":114,"line":289},[112,827,828],{"class":122},"  Red ",[112,830,368],{"class":126},[112,832,137],{"class":126},[112,834,835],{"class":140},"RED",[112,837,262],{"class":126},[112,839,840],{"class":126},",\n",[112,842,843,846,848,850,853,855],{"class":114,"line":710},[112,844,845],{"class":122},"  Green ",[112,847,368],{"class":126},[112,849,137],{"class":126},[112,851,852],{"class":140},"GREEN",[112,854,262],{"class":126},[112,856,840],{"class":126},[112,858,860,863,865,867,870],{"class":114,"line":859},11,[112,861,862],{"class":122},"  Blue ",[112,864,368],{"class":126},[112,866,137],{"class":126},[112,868,869],{"class":140},"BLUE",[112,871,144],{"class":126},[112,873,875],{"class":114,"line":874},12,[112,876,613],{"class":126},[84,878,880],{"id":879},"advanced-type-system","Advanced Type System",[882,883,884],"p",{},"Key points",[886,887,888,892,895],"ul",{},[889,890,891],"li",{},"Generics + keyof/extends = flexible, type-safe APIs.",[889,893,894],{},"Conditional + infer = extract pieces of types.",[889,896,897],{},"Utility types reduce boilerplate; build your own when needed.",[102,899,901],{"className":104,"code":900,"language":106,"meta":107,"style":107},"  // --- Generics (reusable type parameters)\n  function identity\u003CT>(v: T): T { return v }        // generic function\n  type Box\u003CT> = { value: T }                         // generic type\n\n  // --- Constraints & keyof\n  function pluck\u003CT, K extends keyof T>(obj: T, key: K) {\n    return obj[key]                                  // K restricted to object keys\n  }\n\n  // --- Utility built-ins (quick reference)\n  type MyPartial\u003CT> = Partial\u003CT>                     // all props optional\n  type MyRequired\u003CT> = Required\u003CT>                   // all props required\n  type MyReadonly\u003CT> = Readonly\u003CT>                   // props readonly\n  type MyPick\u003CT, K extends keyof T> = Pick\u003CT, K>     // select fields\n  type MyOmit\u003CT, K extends keyof T> = Omit\u003CT, K>     // exclude fields\n  type MyRecord\u003CK extends keyof any, T> = Record\u003CK, T>\n\n  // --- Conditional types & infer\n  type IsString\u003CT> = T extends string ? true : false\n  type FnReturn\u003CT> = T extends (...a: any) => infer R ? R : never\n\n  // --- Mapped & template literal types\n  type Nullable\u003CT> = { [P in keyof T]: T[P] | null } // make props nullable\n  type EventName\u003CT extends string> = `${T}Changed`    // template literal type\n\n",[109,902,903,908,948,978,982,987,1034,1054,1059,1063,1068,1095,1122,1150,1192,1234,1275,1280,1286,1320,1368,1373,1379,1434],{"__ignoreMap":107},[112,904,905],{"class":114,"line":115},[112,906,907],{"class":238},"  // --- Generics (reusable type parameters)\n",[112,909,910,913,916,919,922,925,928,930,933,935,937,939,941,943,945],{"class":114,"line":147},[112,911,912],{"class":118},"  function",[112,914,915],{"class":323}," identity",[112,917,918],{"class":126},"\u003C",[112,920,921],{"class":130},"T",[112,923,924],{"class":126},">(",[112,926,927],{"class":572},"v",[112,929,127],{"class":126},[112,931,932],{"class":130}," T",[112,934,590],{"class":126},[112,936,932],{"class":130},[112,938,313],{"class":126},[112,940,731],{"class":316},[112,942,226],{"class":122},[112,944,545],{"class":126},[112,946,947],{"class":238},"        // generic function\n",[112,949,950,953,956,958,960,962,964,966,969,971,973,975],{"class":114,"line":166},[112,951,952],{"class":118},"  type",[112,954,955],{"class":130}," Box",[112,957,918],{"class":126},[112,959,921],{"class":130},[112,961,411],{"class":126},[112,963,134],{"class":126},[112,965,313],{"class":126},[112,967,968],{"class":327}," value",[112,970,127],{"class":126},[112,972,932],{"class":130},[112,974,545],{"class":126},[112,976,977],{"class":238},"                         // generic type\n",[112,979,980],{"class":114,"line":185},[112,981,619],{"emptyLinePlaceholder":618},[112,983,984],{"class":114,"line":203},[112,985,986],{"class":238},"  // --- Constraints & keyof\n",[112,988,989,991,994,996,998,1000,1003,1006,1009,1011,1013,1016,1018,1020,1022,1025,1027,1029,1032],{"class":114,"line":221},[112,990,912],{"class":118},[112,992,993],{"class":323}," pluck",[112,995,918],{"class":126},[112,997,921],{"class":130},[112,999,580],{"class":126},[112,1001,1002],{"class":130}," K",[112,1004,1005],{"class":118}," extends",[112,1007,1008],{"class":126}," keyof",[112,1010,932],{"class":130},[112,1012,924],{"class":126},[112,1014,1015],{"class":572},"obj",[112,1017,127],{"class":126},[112,1019,932],{"class":130},[112,1021,580],{"class":126},[112,1023,1024],{"class":572}," key",[112,1026,127],{"class":126},[112,1028,1002],{"class":130},[112,1030,1031],{"class":126},")",[112,1033,595],{"class":126},[112,1035,1036,1039,1042,1045,1048,1051],{"class":114,"line":242},[112,1037,1038],{"class":316},"    return",[112,1040,1041],{"class":122}," obj",[112,1043,1044],{"class":327},"[",[112,1046,1047],{"class":122},"key",[112,1049,1050],{"class":327},"]                                  ",[112,1052,1053],{"class":238},"// K restricted to object keys\n",[112,1055,1056],{"class":114,"line":268},[112,1057,1058],{"class":126},"  }\n",[112,1060,1061],{"class":114,"line":289},[112,1062,619],{"emptyLinePlaceholder":618},[112,1064,1065],{"class":114,"line":710},[112,1066,1067],{"class":238},"  // --- Utility built-ins (quick reference)\n",[112,1069,1070,1072,1075,1077,1079,1081,1083,1086,1088,1090,1092],{"class":114,"line":859},[112,1071,952],{"class":118},[112,1073,1074],{"class":130}," MyPartial",[112,1076,918],{"class":126},[112,1078,921],{"class":130},[112,1080,411],{"class":126},[112,1082,134],{"class":126},[112,1084,1085],{"class":130}," Partial",[112,1087,918],{"class":126},[112,1089,921],{"class":130},[112,1091,411],{"class":126},[112,1093,1094],{"class":238},"                     // all props optional\n",[112,1096,1097,1099,1102,1104,1106,1108,1110,1113,1115,1117,1119],{"class":114,"line":874},[112,1098,952],{"class":118},[112,1100,1101],{"class":130}," MyRequired",[112,1103,918],{"class":126},[112,1105,921],{"class":130},[112,1107,411],{"class":126},[112,1109,134],{"class":126},[112,1111,1112],{"class":130}," Required",[112,1114,918],{"class":126},[112,1116,921],{"class":130},[112,1118,411],{"class":126},[112,1120,1121],{"class":238},"                   // all props required\n",[112,1123,1125,1127,1130,1132,1134,1136,1138,1141,1143,1145,1147],{"class":114,"line":1124},13,[112,1126,952],{"class":118},[112,1128,1129],{"class":130}," MyReadonly",[112,1131,918],{"class":126},[112,1133,921],{"class":130},[112,1135,411],{"class":126},[112,1137,134],{"class":126},[112,1139,1140],{"class":130}," Readonly",[112,1142,918],{"class":126},[112,1144,921],{"class":130},[112,1146,411],{"class":126},[112,1148,1149],{"class":238},"                   // props readonly\n",[112,1151,1153,1155,1158,1160,1162,1164,1166,1168,1170,1172,1174,1176,1179,1181,1183,1185,1187,1189],{"class":114,"line":1152},14,[112,1154,952],{"class":118},[112,1156,1157],{"class":130}," MyPick",[112,1159,918],{"class":126},[112,1161,921],{"class":130},[112,1163,580],{"class":126},[112,1165,1002],{"class":130},[112,1167,1005],{"class":118},[112,1169,1008],{"class":126},[112,1171,932],{"class":130},[112,1173,411],{"class":126},[112,1175,134],{"class":126},[112,1177,1178],{"class":130}," Pick",[112,1180,918],{"class":126},[112,1182,921],{"class":130},[112,1184,580],{"class":126},[112,1186,1002],{"class":130},[112,1188,411],{"class":126},[112,1190,1191],{"class":238},"     // select fields\n",[112,1193,1195,1197,1200,1202,1204,1206,1208,1210,1212,1214,1216,1218,1221,1223,1225,1227,1229,1231],{"class":114,"line":1194},15,[112,1196,952],{"class":118},[112,1198,1199],{"class":130}," MyOmit",[112,1201,918],{"class":126},[112,1203,921],{"class":130},[112,1205,580],{"class":126},[112,1207,1002],{"class":130},[112,1209,1005],{"class":118},[112,1211,1008],{"class":126},[112,1213,932],{"class":130},[112,1215,411],{"class":126},[112,1217,134],{"class":126},[112,1219,1220],{"class":130}," Omit",[112,1222,918],{"class":126},[112,1224,921],{"class":130},[112,1226,580],{"class":126},[112,1228,1002],{"class":130},[112,1230,411],{"class":126},[112,1232,1233],{"class":238},"     // exclude fields\n",[112,1235,1237,1239,1242,1244,1247,1249,1251,1253,1255,1257,1259,1261,1264,1266,1268,1270,1272],{"class":114,"line":1236},16,[112,1238,952],{"class":118},[112,1240,1241],{"class":130}," MyRecord",[112,1243,918],{"class":126},[112,1245,1246],{"class":130},"K",[112,1248,1005],{"class":118},[112,1250,1008],{"class":126},[112,1252,252],{"class":130},[112,1254,580],{"class":126},[112,1256,932],{"class":130},[112,1258,411],{"class":126},[112,1260,134],{"class":126},[112,1262,1263],{"class":130}," Record",[112,1265,918],{"class":126},[112,1267,1246],{"class":130},[112,1269,580],{"class":126},[112,1271,932],{"class":130},[112,1273,1274],{"class":126},">\n",[112,1276,1278],{"class":114,"line":1277},17,[112,1279,619],{"emptyLinePlaceholder":618},[112,1281,1283],{"class":114,"line":1282},18,[112,1284,1285],{"class":238},"  // --- Conditional types & infer\n",[112,1287,1289,1291,1294,1296,1298,1300,1302,1304,1306,1308,1311,1314,1317],{"class":114,"line":1288},19,[112,1290,952],{"class":118},[112,1292,1293],{"class":130}," IsString",[112,1295,918],{"class":126},[112,1297,921],{"class":130},[112,1299,411],{"class":126},[112,1301,134],{"class":126},[112,1303,932],{"class":130},[112,1305,1005],{"class":118},[112,1307,131],{"class":130},[112,1309,1310],{"class":126}," ?",[112,1312,1313],{"class":130}," true",[112,1315,1316],{"class":126}," :",[112,1318,1319],{"class":130}," false\n",[112,1321,1323,1325,1328,1330,1332,1334,1336,1338,1340,1343,1345,1347,1349,1351,1353,1356,1359,1361,1363,1365],{"class":114,"line":1322},20,[112,1324,952],{"class":118},[112,1326,1327],{"class":130}," FnReturn",[112,1329,918],{"class":126},[112,1331,921],{"class":130},[112,1333,411],{"class":126},[112,1335,134],{"class":126},[112,1337,932],{"class":130},[112,1339,1005],{"class":118},[112,1341,1342],{"class":126}," (...",[112,1344,573],{"class":572},[112,1346,127],{"class":126},[112,1348,252],{"class":130},[112,1350,1031],{"class":126},[112,1352,310],{"class":118},[112,1354,1355],{"class":126}," infer",[112,1357,1358],{"class":130}," R",[112,1360,1310],{"class":126},[112,1362,1358],{"class":130},[112,1364,1316],{"class":126},[112,1366,1367],{"class":130}," never\n",[112,1369,1371],{"class":114,"line":1370},21,[112,1372,619],{"emptyLinePlaceholder":618},[112,1374,1376],{"class":114,"line":1375},22,[112,1377,1378],{"class":238},"  // --- Mapped & template literal types\n",[112,1380,1382,1384,1387,1389,1391,1393,1395,1397,1400,1403,1406,1408,1410,1413,1415,1417,1419,1421,1424,1427,1429,1431],{"class":114,"line":1381},23,[112,1383,952],{"class":118},[112,1385,1386],{"class":130}," Nullable",[112,1388,918],{"class":126},[112,1390,921],{"class":130},[112,1392,411],{"class":126},[112,1394,134],{"class":126},[112,1396,313],{"class":126},[112,1398,1399],{"class":122}," [",[112,1401,1402],{"class":130},"P",[112,1404,1405],{"class":126}," in",[112,1407,1008],{"class":126},[112,1409,932],{"class":130},[112,1411,1412],{"class":122},"]",[112,1414,127],{"class":126},[112,1416,932],{"class":130},[112,1418,1044],{"class":122},[112,1420,1402],{"class":130},[112,1422,1423],{"class":122},"] ",[112,1425,1426],{"class":126},"|",[112,1428,195],{"class":130},[112,1430,545],{"class":126},[112,1432,1433],{"class":238}," // make props nullable\n",[112,1435,1437,1439,1442,1444,1446,1448,1450,1452,1454,1457,1459,1461,1464,1467],{"class":114,"line":1436},24,[112,1438,952],{"class":118},[112,1440,1441],{"class":130}," EventName",[112,1443,918],{"class":126},[112,1445,921],{"class":130},[112,1447,1005],{"class":118},[112,1449,131],{"class":130},[112,1451,411],{"class":126},[112,1453,134],{"class":126},[112,1455,1456],{"class":126}," `${",[112,1458,921],{"class":130},[112,1460,341],{"class":126},[112,1462,1463],{"class":140},"Changed",[112,1465,1466],{"class":126},"`",[112,1468,1469],{"class":238},"    // template literal type\n",[84,1471,1473],{"id":1472},"type-narrowing-guards","Type Narrowing & Guards",[882,1475,884],{},[886,1477,1478,1481],{},[889,1479,1480],{},"Use discriminants (literal kind fields) for exhaustive checks.",[889,1482,1483],{},"Custom predicates help narrow complex types.",[102,1485,1487],{"className":104,"code":1486,"language":106,"meta":107,"style":107},"// --- Primitive guards\nfunction format(v: string | number) {\n  if (typeof v === \"string\") return v.toUpperCase()   // string branch\n  return v.toFixed(2)                                  // number branch\n}\n\n// --- instanceof / Array.isArray\nif (value instanceof Date) { /* Date-specific */ }\nif (Array.isArray(x)) { /* array-specific */ }\n\n// --- Custom type predicate\nfunction isString(v: any): v is string {\n  return typeof v === \"string\"\n}\nif (isString(maybe)) { /* TS knows maybe is string here */ }\n\n// --- Discriminated union (recommended pattern)\ntype Shape =\n  | { kind: \"circle\"; radius: number }\n  | { kind: \"rect\"; width: number; height: number }\n\nfunction area(s: Shape) {\n  switch (s.kind) {\n    case \"circle\": return Math.PI * s.radius ** 2\n    case \"rect\": return s.width * s.height\n  }\n}\n",[109,1488,1489,1494,1517,1556,1578,1582,1586,1591,1615,1637,1641,1646,1672,1689,1693,1712,1716,1721,1731,1761,1798,1802,1822,1841,1881,1912,1917],{"__ignoreMap":107},[112,1490,1491],{"class":114,"line":115},[112,1492,1493],{"class":238},"// --- Primitive guards\n",[112,1495,1496,1498,1501,1503,1505,1507,1509,1511,1513,1515],{"class":114,"line":147},[112,1497,564],{"class":118},[112,1499,1500],{"class":323}," format",[112,1502,328],{"class":126},[112,1504,927],{"class":572},[112,1506,127],{"class":126},[112,1508,131],{"class":130},[112,1510,468],{"class":126},[112,1512,157],{"class":130},[112,1514,1031],{"class":126},[112,1516,595],{"class":126},[112,1518,1519,1522,1524,1527,1529,1532,1534,1536,1538,1540,1543,1545,1547,1550,1553],{"class":114,"line":166},[112,1520,1521],{"class":316},"  if",[112,1523,304],{"class":327},[112,1525,1526],{"class":126},"typeof",[112,1528,226],{"class":122},[112,1530,1531],{"class":126}," ===",[112,1533,137],{"class":126},[112,1535,408],{"class":140},[112,1537,262],{"class":126},[112,1539,338],{"class":327},[112,1541,1542],{"class":316},"return",[112,1544,226],{"class":122},[112,1546,650],{"class":126},[112,1548,1549],{"class":323},"toUpperCase",[112,1551,1552],{"class":327},"()   ",[112,1554,1555],{"class":238},"// string branch\n",[112,1557,1558,1560,1562,1564,1567,1569,1572,1575],{"class":114,"line":185},[112,1559,600],{"class":316},[112,1561,226],{"class":122},[112,1563,650],{"class":126},[112,1565,1566],{"class":323},"toFixed",[112,1568,328],{"class":327},[112,1570,1571],{"class":162},"2",[112,1573,1574],{"class":327},")                                  ",[112,1576,1577],{"class":238},"// number branch\n",[112,1579,1580],{"class":114,"line":203},[112,1581,613],{"class":126},[112,1583,1584],{"class":114,"line":221},[112,1585,619],{"emptyLinePlaceholder":618},[112,1587,1588],{"class":114,"line":242},[112,1589,1590],{"class":238},"// --- instanceof / Array.isArray\n",[112,1592,1593,1596,1599,1602,1605,1607,1610,1613],{"class":114,"line":268},[112,1594,1595],{"class":316},"if",[112,1597,1598],{"class":122}," (value ",[112,1600,1601],{"class":126},"instanceof",[112,1603,1604],{"class":130}," Date",[112,1606,338],{"class":122},[112,1608,1609],{"class":126},"{",[112,1611,1612],{"class":238}," /* Date-specific */",[112,1614,519],{"class":126},[112,1616,1617,1619,1622,1624,1627,1630,1632,1635],{"class":114,"line":289},[112,1618,1595],{"class":316},[112,1620,1621],{"class":122}," (Array",[112,1623,650],{"class":126},[112,1625,1626],{"class":323},"isArray",[112,1628,1629],{"class":122},"(x)) ",[112,1631,1609],{"class":126},[112,1633,1634],{"class":238}," /* array-specific */",[112,1636,519],{"class":126},[112,1638,1639],{"class":114,"line":710},[112,1640,619],{"emptyLinePlaceholder":618},[112,1642,1643],{"class":114,"line":859},[112,1644,1645],{"class":238},"// --- Custom type predicate\n",[112,1647,1648,1650,1653,1655,1657,1659,1661,1663,1665,1668,1670],{"class":114,"line":874},[112,1649,564],{"class":118},[112,1651,1652],{"class":323}," isString",[112,1654,328],{"class":126},[112,1656,927],{"class":572},[112,1658,127],{"class":126},[112,1660,252],{"class":130},[112,1662,590],{"class":126},[112,1664,226],{"class":572},[112,1666,1667],{"class":126}," is",[112,1669,131],{"class":130},[112,1671,595],{"class":126},[112,1673,1674,1676,1679,1681,1683,1685,1687],{"class":114,"line":1124},[112,1675,600],{"class":316},[112,1677,1678],{"class":126}," typeof",[112,1680,226],{"class":122},[112,1682,1531],{"class":126},[112,1684,137],{"class":126},[112,1686,408],{"class":140},[112,1688,144],{"class":126},[112,1690,1691],{"class":114,"line":1152},[112,1692,613],{"class":126},[112,1694,1695,1697,1699,1702,1705,1707,1710],{"class":114,"line":1194},[112,1696,1595],{"class":316},[112,1698,304],{"class":122},[112,1700,1701],{"class":323},"isString",[112,1703,1704],{"class":122},"(maybe)) ",[112,1706,1609],{"class":126},[112,1708,1709],{"class":238}," /* TS knows maybe is string here */",[112,1711,519],{"class":126},[112,1713,1714],{"class":114,"line":1236},[112,1715,619],{"emptyLinePlaceholder":618},[112,1717,1718],{"class":114,"line":1277},[112,1719,1720],{"class":238},"// --- Discriminated union (recommended pattern)\n",[112,1722,1723,1725,1728],{"class":114,"line":1282},[112,1724,453],{"class":118},[112,1726,1727],{"class":130}," Shape",[112,1729,1730],{"class":126}," =\n",[112,1732,1733,1736,1738,1741,1743,1745,1748,1750,1752,1755,1757,1759],{"class":114,"line":1288},[112,1734,1735],{"class":126},"  |",[112,1737,313],{"class":126},[112,1739,1740],{"class":327}," kind",[112,1742,127],{"class":126},[112,1744,137],{"class":126},[112,1746,1747],{"class":140},"circle",[112,1749,262],{"class":126},[112,1751,508],{"class":126},[112,1753,1754],{"class":327}," radius",[112,1756,127],{"class":126},[112,1758,157],{"class":130},[112,1760,519],{"class":126},[112,1762,1763,1765,1767,1769,1771,1773,1776,1778,1780,1783,1785,1787,1789,1792,1794,1796],{"class":114,"line":1322},[112,1764,1735],{"class":126},[112,1766,313],{"class":126},[112,1768,1740],{"class":327},[112,1770,127],{"class":126},[112,1772,137],{"class":126},[112,1774,1775],{"class":140},"rect",[112,1777,262],{"class":126},[112,1779,508],{"class":126},[112,1781,1782],{"class":327}," width",[112,1784,127],{"class":126},[112,1786,157],{"class":130},[112,1788,508],{"class":126},[112,1790,1791],{"class":327}," height",[112,1793,127],{"class":126},[112,1795,157],{"class":130},[112,1797,519],{"class":126},[112,1799,1800],{"class":114,"line":1370},[112,1801,619],{"emptyLinePlaceholder":618},[112,1803,1804,1806,1809,1811,1814,1816,1818,1820],{"class":114,"line":1375},[112,1805,564],{"class":118},[112,1807,1808],{"class":323}," area",[112,1810,328],{"class":126},[112,1812,1813],{"class":572},"s",[112,1815,127],{"class":126},[112,1817,1727],{"class":130},[112,1819,1031],{"class":126},[112,1821,595],{"class":126},[112,1823,1824,1827,1829,1831,1833,1836,1838],{"class":114,"line":1381},[112,1825,1826],{"class":316},"  switch",[112,1828,304],{"class":327},[112,1830,1813],{"class":122},[112,1832,650],{"class":126},[112,1834,1835],{"class":122},"kind",[112,1837,338],{"class":327},[112,1839,1840],{"class":126},"{\n",[112,1842,1843,1846,1848,1850,1852,1854,1856,1859,1861,1864,1867,1870,1872,1875,1878],{"class":114,"line":1436},[112,1844,1845],{"class":316},"    case",[112,1847,137],{"class":126},[112,1849,1747],{"class":140},[112,1851,262],{"class":126},[112,1853,127],{"class":126},[112,1855,731],{"class":316},[112,1857,1858],{"class":122}," Math",[112,1860,650],{"class":126},[112,1862,1863],{"class":122},"PI",[112,1865,1866],{"class":126}," *",[112,1868,1869],{"class":122}," s",[112,1871,650],{"class":126},[112,1873,1874],{"class":122},"radius",[112,1876,1877],{"class":126}," **",[112,1879,1880],{"class":162}," 2\n",[112,1882,1884,1886,1888,1890,1892,1894,1896,1898,1900,1903,1905,1907,1909],{"class":114,"line":1883},25,[112,1885,1845],{"class":316},[112,1887,137],{"class":126},[112,1889,1775],{"class":140},[112,1891,262],{"class":126},[112,1893,127],{"class":126},[112,1895,731],{"class":316},[112,1897,1869],{"class":122},[112,1899,650],{"class":126},[112,1901,1902],{"class":122},"width",[112,1904,1866],{"class":126},[112,1906,1869],{"class":122},[112,1908,650],{"class":126},[112,1910,1911],{"class":122},"height\n",[112,1913,1915],{"class":114,"line":1914},26,[112,1916,1058],{"class":126},[112,1918,1920],{"class":114,"line":1919},27,[112,1921,613],{"class":126},[1923,1924,1925],"style",{},"html pre.shiki code .spNyl, html code.shiki .spNyl{--shiki-light:#9C3EDA;--shiki-default:#C792EA;--shiki-dark:#C792EA}html pre.shiki code .sTEyZ, html code.shiki .sTEyZ{--shiki-light:#90A4AE;--shiki-default:#EEFFFF;--shiki-dark:#BABED8}html pre.shiki code .sMK4o, html code.shiki .sMK4o{--shiki-light:#39ADB5;--shiki-default:#89DDFF;--shiki-dark:#89DDFF}html pre.shiki code .sBMFI, html code.shiki .sBMFI{--shiki-light:#E2931D;--shiki-default:#FFCB6B;--shiki-dark:#FFCB6B}html pre.shiki code .sfazB, html code.shiki .sfazB{--shiki-light:#91B859;--shiki-default:#C3E88D;--shiki-dark:#C3E88D}html pre.shiki code .sbssI, html code.shiki .sbssI{--shiki-light:#F76D47;--shiki-default:#F78C6C;--shiki-dark:#F78C6C}html pre.shiki code .sfNiH, html code.shiki .sfNiH{--shiki-light:#FF5370;--shiki-default:#FF9CAC;--shiki-dark:#FF9CAC}html pre.shiki code .sHwdD, html code.shiki .sHwdD{--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-default:#546E7A;--shiki-default-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic}html pre.shiki code .s7zQu, html code.shiki .s7zQu{--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-default:#89DDFF;--shiki-default-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic}html pre.shiki code .s2Zo4, html code.shiki .s2Zo4{--shiki-light:#6182B8;--shiki-default:#82AAFF;--shiki-dark:#82AAFF}html pre.shiki code .swJcz, html code.shiki .swJcz{--shiki-light:#E53935;--shiki-default:#F07178;--shiki-dark:#F07178}html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html pre.shiki code .sHdIc, html code.shiki .sHdIc{--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-default:#EEFFFF;--shiki-default-font-style:italic;--shiki-dark:#BABED8;--shiki-dark-font-style:italic}",{"title":107,"searchDepth":115,"depth":147,"links":1927},[1928,1929,1930],{"id":86,"depth":147,"text":87},{"id":879,"depth":147,"text":880},{"id":1472,"depth":147,"text":1473},"md",[],{},{"icon":77},{"title":74,"description":107},"ebg3GFWJ_77sshbWW6FNZYeJjhATJEfLEFtbpp9D_v4",[1938,1940],{"title":70,"path":71,"stem":72,"description":1939,"children":-1},"An aproach to solid principles from a javascript perspective and it's aproach nowdays (including it's frameworks)",null,1759708942195]