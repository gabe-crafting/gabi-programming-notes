[{"data":1,"prerenderedAt":589},["ShallowReactive",2],{"navigation":3,"/web/cheatsheet":65,"/web/cheatsheet-surround":585},[4,23,48],{"title":5,"path":6,"stem":7,"children":8,"icon":22},"Getting Started","/getting-started","1.getting-started/1.index",[9,12,17],{"title":10,"path":6,"stem":7,"icon":11},"Introduction","i-lucide-house",{"title":13,"path":14,"stem":15,"icon":16},"Installation","/getting-started/installation","1.getting-started/2.installation","i-lucide-download",{"title":18,"path":19,"stem":20,"icon":21},"Usage","/getting-started/usage","1.getting-started/3.usage","i-lucide-sliders",false,{"title":24,"path":25,"stem":26,"children":27,"page":22},"Essentials","/essentials","2.essentials",[28,33,38,43],{"title":29,"path":30,"stem":31,"icon":32},"Markdown Syntax","/essentials/markdown-syntax","2.essentials/1.markdown-syntax","i-lucide-heading-1",{"title":34,"path":35,"stem":36,"icon":37},"Code Blocks","/essentials/code-blocks","2.essentials/2.code-blocks","i-lucide-code-xml",{"title":39,"path":40,"stem":41,"icon":42},"Prose Components","/essentials/prose-components","2.essentials/3.prose-components","i-lucide-component",{"title":44,"path":45,"stem":46,"icon":47},"Images and Embeds","/essentials/images-embeds","2.essentials/4.images-embeds","i-lucide-image",{"title":49,"path":50,"stem":51,"children":52,"page":22},"Web","/web","web",[53,57,61],{"title":54,"path":55,"stem":56},"Tools","/web/utilities","web/1.utilities",{"title":58,"path":59,"stem":60},"Cheatsheet","/web/cheatsheet","web/cheatsheet",{"title":62,"path":63,"stem":64},"SOLID for javascript, typescript, component frameworks","/web/solid-for-web","web/solid-for-web",{"id":66,"title":58,"body":67,"description":575,"extension":579,"links":580,"meta":581,"navigation":582,"path":59,"seo":583,"stem":60,"__hash__":584},"docs/web/cheatsheet.md",{"type":68,"value":69,"toc":574},"minimark",[70,75,208,212,443,447],[71,72,74],"h1",{"id":73},"testing","Testing",[76,77,80,112,132,151],"card-group",{"className":78},[79],"w-full",[81,82,83,87],"card",{},[84,85,74],"h2",{"id":86},"testing-1",[88,89,90,94,97,100,103,106,109],"ul",{},[91,92,93],"li",{},"Unit testing: Validate the behavior of function, classes, components, methods (Given an input, check if the output is expected)",[91,95,96],{},"Integration testing",[91,98,99],{},"End to end testing: Run your app in a simulated environment: Cypress",[91,101,102],{},"acceptance testing: tests that ensure the software meets all the clients requirement",[91,104,105],{},"system testing: Tests that work on required hardware/servers",[91,107,108],{},"smoke testing: Most important tests first before the rest of the suit",[91,110,111],{},"stress testing: capability of infrastructure",[81,113,114,118],{},[84,115,117],{"id":116},"test-driven-development","Test driven development",[88,119,120,123,126,129],{},[91,121,122],{},"Have a pipeline that run the tests before making the commit",[91,124,125],{},"Write tests before start coding",[91,127,128],{},"Refactor -> Fail -> Pass -> Refactor (till all pass)",[91,130,131],{},"tool: jest",[81,133,134,137],{},[84,135,96],{"id":136},"integration-testing",[88,138,139,142,145,148],{},[91,140,141],{},"Testing multiple units of code together.",[91,143,144],{},"Not just input and output. See if a function has been called the right way, as many time as needed with the correct parameters, the component has been mounted and so on",[91,146,147],{},"Ex: Component that takes data from a hook. Check if it displayed properly in the component",[91,149,150],{},"Ex: API getters that integrates with the application. Proper errors are integrated, proper result display and so on.",[81,152,153,157],{},[84,154,156],{"id":155},"jest","Jest",[88,158,159,192,195],{},[91,160,161,168,169],{},[162,163,167],"a",{"href":164,"rel":165},"https://jestjs.io/docs/mock-function-api",[166],"nofollow","Mock functions",": function that you can pass as a callback to test other function. You can watch details about the callback. How many time it was run and what parameters where passed into it.\n",[88,170,171,186],{},[91,172,173,174,178,179,182,183],{},"you can acces the watch method intel with ",[175,176,177],"code",{},".mock"," attribute ex ",[175,180,181],{},"mockFn.mock.calls",", ",[175,184,185],{},"mockFn.mock.results",[91,187,188,191],{},[175,189,190],{},"spyOn"," to also track the methods",[91,193,194],{},"Setup and Teardown: You can set prepearment methods: what will happen before/after testing, for everything or just scoped",[91,196,197,198,182,201,182,204,207],{},"The Jest Object: Automatically in scope in every test file. Provides the functionality, ",[175,199,200],{},"test",[175,202,203],{},"it",[175,205,206],{},"describe",", etc.",[71,209,211],{"id":210},"data-storage-and-manipulation","Data storage and manipulation",[76,213,215,271,306,342,369,378,405],{"className":214},[79],[81,216,217,225,229],{},[84,218,220],{"id":219},"rest",[162,221,224],{"href":222,"rel":223},"https://developer.mozilla.org/en-US/docs/Glossary/REST",[166],"Rest",[226,227,228],"p",{},"Rest: A web arhitecture that is based on client sending a request and getting a response.Methods:",[88,230,231,239,247,255,263],{},[91,232,233,238],{},[162,234,237],{"href":235,"rel":236},"https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/GET",[166],"GET"," retrieve data from server",[91,240,241,246],{},[162,242,245],{"href":243,"rel":244},"https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/POST",[166],"POST"," cause a change",[91,248,249,254],{},[162,250,253],{"href":251,"rel":252},"https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/PUT",[166],"PUT"," replace all the target with the payload",[91,256,257,262],{},[162,258,261],{"href":259,"rel":260},"https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/PATCH",[166],"PATCH"," apply partial modification",[91,264,265,270],{},[162,266,269],{"href":267,"rel":268},"https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/DELETE",[166],"DELETE"," deletes the specific resource",[81,272,273,277,303],{},[84,274,276],{"id":275},"browser-user-data-storage-database","Browser user data storage & database",[88,278,279,287,295],{},[91,280,281,286],{},[162,282,285],{"href":283,"rel":284},"https://developer.mozilla.org/en-US/docs/Web/API/Window/sessionStorage",[166],"sessionStorage"," ends when browser session ends",[91,288,289,294],{},[162,290,293],{"href":291,"rel":292},"https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage",[166],"localStorage"," no expiration time",[91,296,297,302],{},[162,298,301],{"href":299,"rel":300},"https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies",[166],"cookies"," Any data about user that is stored in a session level (server side)",[226,304,305],{},"Crud: all ways that you can operate a store data (used in databases): create, read, update, delete",[81,307,308,316],{},[84,309,311],{"id":310},"webhook",[162,312,315],{"href":313,"rel":314},"https://www.getvero.com/resources/webhooks/",[166],"Webhook",[88,317,318,325,336,339],{},[91,319,320],{},[162,321,324],{"href":322,"rel":323},"https://www.youtube.com/watch?v=Mfzucn4f9Xk",[166],"video reference",[91,326,327,328],{},"your frontend uses a third party webhook service provider + the webhookEndpoint\n",[88,329,330,333],{},[91,331,332],{},"by accessing it's frontend",[91,334,335],{},"by sending it a request for a service",[91,337,338],{},"the third webhook provider party executes the action then sends a payload (usually a 200) to the sended webhookEndpoint (your backend)",[91,340,341],{},"your backend notify your frontend that action is completed (most prob with a SSE / sockets)",[81,343,344,352],{},[226,345,346,351],{},[162,347,350],{"href":348,"rel":349},"https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events",[166],"Server-Sent Events (SSE)"," is a web technology that pushes text event to the browser",[88,353,354,357,360,363,366],{},[91,355,356],{},"Unidirectional communication: SSE allows the server to push data to the client (web browser) without the need for the client to make additional requests.",[91,358,359],{},"uses EventSource to declear the listened link",[91,361,362],{},"Automatic reconnection",[91,364,365],{},"Event-driven: Data sent through SSE is organized into named events",[91,367,368],{},"Text-based data transmission (including objects)",[81,370,371,375],{},[84,372,374],{"id":373},"webrtc-web-real-time-communication","WebRTC (Web Real-Time Communication):",[226,376,377],{},"Powerful set of APIs that enable real-time communication directly between web browsers without the need for plugins or intermediary servers. WebRTC is primarily used for peer-to-peer audio, video, and data sharing applications.",[81,379,380,388],{},[84,381,383],{"id":382},"websockets",[162,384,387],{"href":385,"rel":386},"https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API",[166],"WebSockets",[88,389,390,393,396,399,402],{},[91,391,392],{},"Protocol: WebSocket operates over a single, full-duplex TCP connection.",[91,394,395],{},"Bidirectional Communication: Allows data to be sent and received simultaneously between client and server.",[91,397,398],{},"Real-time Updates: Ideal for applications requiring live updates and instant communication.",[91,400,401],{},"Efficiency: Reduces overhead by maintaining a persistent connection.",[91,403,404],{},"inspect them in networking by checking ws",[81,406,407,411],{},[84,408,410],{"id":409},"graphql","GraphQl",[88,412,413,416,419,422,425,428,431,434,437,440],{},[91,414,415],{},"Query language for APIs, Client's query for certain data, returns requested data in a JSON-like format",[91,417,418],{},"Allows clients to request specific data they need",[91,420,421],{},"Defined by a schema describing data types, fields, and relationships",[91,423,424],{},"Single endpoint for querying",[91,426,427],{},"Hierarchical queries mirror data structure",[91,429,430],{},"Supports mutations for creating, updating, or deleting data",[91,432,433],{},"Subscriptions for real-time updates",[91,435,436],{},"Optimizing data fetching in complex applications",[91,438,439],{},"Simplifies API interactions with a single endpoint",[91,441,442],{},"Type safety and validation of queries",[71,444,446],{"id":445},"optimization-core-web-vitals","Optimization & Core web vitals",[76,448,450,511,548],{"className":449},[79],[81,451,452,456,463,489,494],{},[84,453,455],{"id":454},"optimization-tools","Optimization tools",[226,457,458],{},[162,459,462],{"href":460,"rel":461},"https://www.youtube.com/watch?v=0fONene3OIA",[166],"Reference",[88,464,465,473,481],{},[91,466,467,472],{},[162,468,471],{"href":469,"rel":470},"https://chromewebstore.google.com/detail/web-vitals/ahfhijdlegdabablpippeagghigmibma?pli=1",[166],"web vitals"," made by google, hover over elements that need optimization, display measurements",[91,474,475,480],{},[162,476,479],{"href":477,"rel":478},"https://developer.chrome.com/docs/lighthouse/overview/",[166],"lighthouse"," (integrated with devtools)",[91,482,483,488],{},[162,484,487],{"href":485,"rel":486},"https://unlighthouse.dev/",[166],"unlighthouse"," - lighthouse report for each page (has an stk, can be integrated into the pipeline)",[490,491,493],"h5",{"id":492},"fid-first-input-delay","FID (First Input Delay)",[88,495,496,499,502,505,508],{},[91,497,498],{},"The ammount of time the user interacts with the page (click button, process events)",[91,500,501],{},"Good 100ms \u003C needs improvement 300ms \u003C bad",[91,503,504],{},"reduce javascript execution time",[91,506,507],{},"use lazy loading",[91,509,510],{},"measure with web vitals plugin",[81,512,513,517],{},[84,514,516],{"id":515},"lcp-largest-contentful-paint","LCP (Largest contentful paint)",[88,518,519,522,525,528,531,534,537],{},[91,520,521],{},"loading performance: text -> css -> images & videos.",[91,523,524],{},"Good 2.5 sec \u003C Needs improvement 4.0 \u003C poor (impact on search engine optimization)",[91,526,527],{},"analyze open network -> analyze waterfall",[91,529,530],{},"reduce the resource load time (compress img use modern formats and fonts)",[91,532,533],{},"serves assets from CDN (content delivery network) server nearby good",[91,535,536],{},"blocking js (don't run js before loading the image), SSR > SPA",[91,538,539,540],{},"preload (modenr browser)\n",[88,541,542,545],{},[91,543,544],{},"img fetchPriority (high/low) html tag",[91,546,547],{},"preload attribute in link",[81,549,550,554,557],{},[84,551,553],{"id":552},"cls-comulative-layout-shift","CLS (Comulative Layout Shift)",[226,555,556],{},"Visual stability. All things load at once or pretty close to each other. No random renders apears on screen",[88,558,559,562,565,568,571],{},[91,560,561],{},"good 0.1 \u003C needs improvement 0.25 \u003C bad",[91,563,564],{},"generate lighthouse report in dev tools",[91,566,567],{},"web vitals extension",[91,569,570],{},"don't use img without width / height tags or aspect-ratio: 4/9;",[91,572,573],{},"srcset tag different img different containers",{"title":575,"searchDepth":576,"depth":577,"links":578},"",1,2,[],"md",null,{},true,{"title":58,"description":575},"EIIVKjyAsTXoBU2NozlL7yRLvMeCqhZWrdJ_u15WM8M",[586,587],{"title":54,"path":55,"stem":56,"description":575,"children":-1},{"title":62,"path":63,"stem":64,"description":588,"children":-1},"An aproach to solid principles from a javascript perspective and it's aproach nowdays (including it's frameworks)",1757424042706]